<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.zizhuling.striveboybiao-boot</groupId>
    <artifactId>striveboybiao-boot-web</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>striveboybiao-boot-blog</artifactId>
  <packaging>jar</packaging>
  
  
  
   <build>
       <finalName>${project.artifactId}</finalName>
        <plugins>
             <!--在添加了该插件之后，当运行“mvn package”进行打包时，会打包成一个可以直接运行的JAR文件， 使用"java -jar"命令就可以直接运行-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
             <!--打包插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>src/main/resources/assembly/assembly-descriptor.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--打成jar时，设定manifest的参数，比如指定运行的Main class，还有依赖的jar包，加入classpath中 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifest>
                            <!-- 指定入口函数 -->
                            <mainClass>com.zizhuling.blog.BlogApplication</mainClass>
                            <!-- 打包时 MANIFEST.MF文件不记录的时间戳版本 -->
                            <useUniqueVersions>false</useUniqueVersions>
                             <!-- 是否添加依赖的jar路径配置 -->
                            <addClasspath>true</addClasspath>
                            <!-- 依赖的jar包存放位置，和生成的jar放在同一级目录下 -->
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                        <manifestEntries>
                            <Class-Path>.</Class-Path>
                        </manifestEntries>
                    </archive>
                    <excludes>
                        <exclude>application.properties</exclude>
                        <exclude>application-dev.properties</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>